@model ItemAddVM
@{
    ViewData["Title"] = "WasteLand";
}

<div class="d-flex flex-row">
    <partial name=_PartialViewForm model=Model.FormVM />

    <div class="text-lg-center container">
        @if (Model.ItemList.Length <= 0)
        {
            <p>
                Det verkar som att du inte har slängt någonting ännu, bra jobbat @Context.User.Identity.Name!
            </p>
        }
        else
        {
            <ul>
                <partial name=_PartialItemList model=Model.ItemList />
            </ul>
        }
    </div>
</div>

@section scripts
{
    <partial name="_PartialValidationScripts" />
    <script>
        var ctx = document.getElementById('myChart').getContext('2d');
        var myChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['Fisk', 'Frukt', 'Färdigmat', 'Grönsaker', 'Konserver', 'Kött', 'Mejeriprodukter', 'Rotfrukter', 'Spannmål', 'Övrigt'],
                @*labels: [@for (int i = 0; i < itemList.Length; i++)
                {
                    @Html.Raw("'" + itemList[i].Type + "'" + (i<itemList.Length-1? ", ": string.Empty))
                }],*@
                datasets: [{
                label: 'Slängd mat i Kg',
                    data: [@{
                        double fiskAmount = 0;
                        double fruktAmount = 0;
                        double färdigmatAmount = 0;
                        double grönsakerAmount = 0;
                        double konserverAmount = 0;
                        double köttAmount = 0;
                        double mejeriprodukterAmount = 0;
                        double rotfrukterAmount = 0;
                        double spannmålAmount = 0;
                        double övrigtAmount = 0;

                        foreach (var item in Model.ItemListNormalized)
                        {
                            switch (item.Type)
                            {
                                case ProductType.Fisk:
                                    fiskAmount += item.Amount;
                                    break;
                                case ProductType.Frukt:
                                    fruktAmount += item.Amount;
                                    break;
                                case ProductType.Färdigmat:
                                    färdigmatAmount += item.Amount;
                                    break;
                                case ProductType.Grönsaker:
                                    grönsakerAmount += item.Amount;
                                    break;
                                case ProductType.Konserver:
                                    konserverAmount += item.Amount;
                                    break;
                                case ProductType.Kött:
                                    köttAmount += item.Amount;
                                    break;
                                case ProductType.Mejeriprodukter:
                                    mejeriprodukterAmount += item.Amount;
                                    break;
                                case ProductType.Rotfrukter:
                                    rotfrukterAmount += item.Amount;
                                    break;
                                case ProductType.Spannmål:
                                    spannmålAmount += item.Amount;
                                    break;
                                case ProductType.Övrigt:
                                    övrigtAmount += item.Amount;
                                    break;
                                default:
                                    break;
                            }
                        }
                        }@fiskAmount, @fruktAmount, @färdigmatAmount, @grönsakerAmount, @konserverAmount, @köttAmount, @mejeriprodukterAmount, @rotfrukterAmount, @spannmålAmount, @övrigtAmount],
                    backgroundColor: [
                    'rgba(255, 99, 132, 0.2)',
                    'rgba(54, 162, 235, 0.2)',
                    'rgba(255, 204, 255, 0.2)',
                    'rgba(75, 192, 192, 0.2)',
                    'rgba(153, 102, 255, 0.2)',
                    'rgba(255, 159, 64, 0.2)',
                    'rgba(0, 102, 0, 0.2)',
                    'rgba(204, 0, 102, 0.2)',
                    'rgba(255, 206, 86, 0.2)',
                    'rgba(0, 0, 0, 0.2)',
                    ],
                    borderColor: [
                    'rgba(255, 99, 132, 1)',
                    'rgba(54, 162, 235, 1)',
                    'rgba(255, 204, 255, 1)',
                    'rgba(75, 192, 192, 1)',
                    'rgba(153, 102, 255, 1)',
                    'rgba(255, 159, 64, 1)',
                    'rgba(0, 102, 0, 1)',
                    'rgba(204, 0, 102, 1)',
                    'rgba(255, 206, 86, 1)',
                    'rgba(0, 0, 0, 1)'
                    ],
                    borderWidth: 1
                }]
            },
            options: {
                scales: {
                    yAxes: [{
                        ticks: {
                            beginAtZero: true
                        }
                    }]
                }
            }
        });
    </script>
}